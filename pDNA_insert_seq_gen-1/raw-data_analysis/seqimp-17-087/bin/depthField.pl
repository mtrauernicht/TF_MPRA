#!/usr/bin/env perl
use strict;
use warnings;

###########################################################################

#This script is part of the Kraken framework which aims to facilitate RNA 
#sequence analysis in a streamlined and efficient manner.
#Copyright (C) 2011 2012 2013 EMBL - European Bioinformatics Institute 

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program (Please see the COPYING file for details).
#If not, see <http://www.gnu.org/licenses/>.

#Please send bug reports to:
#kraken@ebi.ac.uk

###########################################################################

# This script will take a SAM file generated by bowtie via tally and add
# additional optional fields to handle read depth and loci to which the read
# will map.

### TO DO:
#If multiple copies of the same read match sequentially add label each printed version.?
#Defensive programming in case of disasterous format errors?

die "This script needs 2 arguments\n" unless @ARGV == 2;

my $samFile = shift;
my $outFile = shift;
my %loci = ();

########################################################
### PARSE SAM FILE AND FIND TOTAL LOCI FOR EACH READ ###
########################################################

open(SAM , "gzip -cdf $samFile| cat |") || die "Can't open $samFile\n";
while (<SAM>){
   next if m/^@/;
   chomp;
   my @break = split "\t";
   my $ID  = shift @break;
   #print "$ID\n";
   $loci{$ID}++;
}
close(SAM);

#print "Number of loci:\n";
#map {print "$_: ".$loci{$_}."\n"} keys %loci;

######################################################
### PARSE FILE AGAIN AND ADD EXTRA INFO TO RECORDS ###
######################################################

open(OUT , "| gzip -c1 > $outFile") || die "Can't open $outFile\n";
open(SAM2 , "gzip -cdf $samFile| cat |") || die "Can't open $samFile\n";

# Check first line for header and print to file with no newlines
chomp(my $first = <SAM2>);
die "SAM file does not contain a header\n" unless ($first =~ m/^@/);

print OUT "$first";
while (<SAM2>){
   chomp;

   # Print header lines directly to file - begin with @
   if(m/^@/){
      print OUT "\n$_";
      next;
   }

   # Retrieve read depth info
   my $current = $_ ;
   my @fracture = split "\t", $current;
   my $readname = shift @fracture;
   my $depth = (split ("_", $readname))[-1]; 
   $depth =~ s/x(\d+)$/$1/;
   #print "READ: $readname\n";
   
   #Â Print depth and number of loci as additional fields to file
   my $dl = $loci{$readname};
   my $dr = $depth;
   #print "Loci::\t$dl\nDepth::\t$dr\n";
   print OUT "\n$current\tDL:i:$dl\tDR:i:$dr";
}
close(SAM2);
close(OUT);
